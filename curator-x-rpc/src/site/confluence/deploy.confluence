[[Curator RPC Proxy|index.html]] / Deployment

h1. Deployment

h2. Running

Curator RPC is built as an "uber" Java JAR and can be downloaded from Maven Central. Go to [[http://search.maven.org/|http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.apache.curator%22%20AND%20a%3A%22curator-x-rpc%22]]
and search for "curator\-x\-rpc" and download the JAR for the latest version. This JAR can be run directly ala:

{noformat}
java -jar curator-x-rpc-VERSION.jar <argument>
{noformat}

The argument is either a configuration file or a JSON or YAML string. Call without the argument for help text. See [[Configuration|configuration.html]] for details.

h2. Deploying

Curator RPC is designed to have an instance of its Thrift Server co\-located on each client instance that needs to connect to ZooKeeper
(see the figure below). Each Curator RPC instance is configured (see [[Configuration|configuration.html]]) to connect to one or more
ZooKeeper clusters. The Curator Framework instances are maintained inside of the Curator RPC instances and RPC clients reference these instances by name.

How you configure your server to launch depends on your environment and other needs. Here are some suggestions:

* [Airlift Launcher|https://github.com/airlift/airlift/tree/master/launcher]
* [Docker|https://www.docker.io/]
* [One-JAR|http://one-jar.sourceforge.net/]
* [Capsule|https://github.com/puniverse/capsule]

h2. Topology

!images/topology.png!
